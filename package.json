{
	"name": "dxmate",
	"displayName": "DX-Mate",
	"description": "Support tools for SFDX development",
	"publisher": "Accenture",
	"icon": "src/graphics/lightning.png",
	"version": "1.0.12",
	"repository": {
		"type": "git",
		"url": "https://github.com/Accenture/DX-Mate.git"
	},
	"dependencies": {
		"sfdx-cli": "7.171.0",
		"sfpowerkit": "4.2.13"
	},
	"extensionDependencies": [
		"salesforce.salesforcedx-vscode-core"
	],
	"engines": {
		"vscode": "^1.64.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "dxmate.importDummyData",
				"title": "dxmate: Import dummy data"
			},
			{
				"command": "dxmate.createProject",
				"title": "dxmate: create project"
			},
			{
				"command": "runningTasks.refreshEntry",
				"title": "dxmate: Refresh running tasks"
			},
			{
				"command": "runningTasks.cancel",
				"title": "Cancel running jobs",
				"icon": "$(stop)"
			},
			{
				"command": "runningTasks.clear",
				"title": "Clear jobs",
				"icon": "$(clear-all)"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "dxmate-explorer",
					"title": "DX Mate",
					"icon": "src/graphics/lightning.png"
				}
			]
		},
		"views": {
			"dxmate-explorer": [
				{
					"id": "orgCommands",
					"name": "DX Mate org actions",
					"contextualTitle": "DX Mate Explorer",
					"when": "hasSfdxProject && extensionActivated"
				},
				{
					"id": "packageCommands",
					"name": "DX Mate package actions",
					"contextualTitle": "DX Mate Explorer",
					"when": "hasSfdxProject && extensionActivated"
				},
				{
					"id": "sourceCommands",
					"name": "DX Mate source actions",
					"contextualTitle": "DX Mate Explorer",
					"when": "hasSfdxProject && extensionActivated"
				},
				{
					"id": "dataCommands",
					"name": "DX Mate data actions",
					"contextualTitle": "DX Mate Explorer",
					"when": "hasSfdxProject && extensionActivated"
				},
				{
					"id": "noSfdxProjectPresent",
					"name": "",
					"when": "!hasSfdxProject && extensionActivated"
				},
				{
					"id": "runningTasks",
					"name": "Running Tasks",
					"when": "extensionActivated"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "noSfdxProjectPresent",
				"contents": "No SFDX project detected.\n[SFDX Create Project](command:dxmate.createProject)"
			},
			{
				"view": "orgCommands",
				"contents": "Scratch org pooling is activated\n[Get Scratch From Pool](command:dxmate.getScratchFromPool)",
				"when": "poolingActivated"
			},
			{
				"view": "orgCommands",
				"contents": "[Create Scratch Org](command:dxmate.createScratch)\n[Open default scratch org](command:dxmate.openScratch)\n[Generate login link](command:dxmate.scratchLoginLink)"
			},
			{
				"view": "packageCommands",
				"contents": "[Update/Add dependency key](command:dxmate.updateDependencyKey)\n[Re-install dependent packages](command:dxmate.dependencyInstall)\n[Add package dependency](command:dxmate.addDependency)"
			},
			{
				"view": "sourceCommands",
				"contents": "[Pull source](command:dxmate.pullSource)\n[Push source](command:dxmate.pushSource)\n"
			},
			{
				"view": "dataCommands",
				"contents": "[Import dummy data](command:dxmate.importDummyData)\n[Export data](command:dxmate.exportData)\n[Assign default permission sets](command:dxmate.assignPermissionsets)"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "runningTasks.cancel",
					"when": "view == runningTasks",
					"group": "navigation"
				},
				{
					"command": "runningTasks.clear",
					"when": "view == runningTasks",
					"group": "navigation"
				}
			]
		},
		"configuration": {
			"type": "object",
			"title": "DX-Mate",
			"properties": {
				"dummy.data.location": {
					"type": "string",
					"default": "/dummy-data",
					"description": "Relative folder location to where dummy data should be imported using the sfdx import command"
				},
				"dummy.users.location": {
					"type": "string",
					"description": "Relative folder location to where json files for dummy users are stored"
				},
				"dependency.keys": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					},
					"description": "Defining the package installation keys of the known dependencies. Define package names as keys and installation key as values. Note that you should store this solely in user settings outside the workspace"
				},
				"unpackagable.location": {
					"type": "string",
					"default": "/unpackagable",
					"description": "Relative folder location to where unpackagable metadata is stored. This is automatically deployed aftert scratch creation and dependency install"
				},
				"scratch.default.permissionsets": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "List of permission set to assign to your default scratch user (Used for single package directory projects)"
				},
				"multi.scratch.default.permissionsets": {
					"type": "array",
					"description": "Used when project contains multiple package directories",
					"items": {
						"type": "object",
						"properties": {
							"packagename": {
								"type": "string",
								"default": "packagename",
								"description": "Name of the package to define defaults for."
							},
							"permissionsets": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"default": [
									"permset1",
									"pemset2"
								],
								"description": "List of permission sets."
							}
						}
					}
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.0",
		"@types/node": "14.x",
		"@types/vscode": "^1.64.0",
		"@typescript-eslint/eslint-plugin": "^5.12.1",
		"@typescript-eslint/parser": "^5.12.1",
		"@vscode/test-electron": "^2.1.2",
		"eslint": "^8.9.0",
		"glob": "^7.2.0",
		"mocha": "^9.2.1",
		"typescript": "^4.5.5"
	}
}
